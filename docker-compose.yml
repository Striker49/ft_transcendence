services:
  db:
    build:
      context: services/postgres
      dockerfile: build/Dockerfile.${DOCKERFILE_EXT}
    networks:
      - django_network
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
    volumes:
      - postgres-db:/var/lib/postgresql/data
    expose:
      - "5432"
    restart: unless-stopped

  django:
    networks:
      - transcendence
      - django_network
    build:
      context: ./services/django
      dockerfile: build/Dockerfile.${DOCKERFILE_EXT}
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./services/django:/code
    expose:
      - "8000"
    depends_on:
      - db
    env_file:
      - ./services/django/.env

  frontend:
    networks:
      - transcendence
      - django_network
    build:
      context: ./services/frontend
      dockerfile: build/Dockerfile.${DOCKERFILE_EXT}
    volumes:
      - ./frontend/node_modules
      - ./services/frontend:/frontend/
    expose:
      - "8080"

  nginx:
    networks:
      - transcendence
    depends_on:
      - django
    build:
      context: ./services/nginx
      dockerfile: build/Dockerfile.${DOCKERFILE_EXT}
    volumes:
      - ./services/app:/code
    ports:
      - "443:443"
      - "80:80"
    restart: on-failure
    env_file:
    - ./services/nginx/.env

networks:
  transcendence:
    driver: bridge
  django_network:
    driver: bridge

volumes:
  postgres-db: